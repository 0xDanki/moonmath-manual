## -*- encoding: utf-8 -*-

# This file was *autogenerated* from the file /home/mirco/Leastauthority/MMM/moonmath-manual/main-moonmath.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_613 = Integer(613); _sage_const_58 = Integer(58); _sage_const_857 = Integer(857); _sage_const_855 = Integer(855); _sage_const_694 = Integer(694); _sage_const_1729 = Integer(1729); _sage_const_80 = Integer(80); _sage_const_1878 = Integer(1878); _sage_const_1874 = Integer(1874); _sage_const_765 = Integer(765); _sage_const_767 = Integer(767); _sage_const_1629 = Integer(1629); _sage_const_2021 = Integer(2021); _sage_const_629 = Integer(629); _sage_const_534 = Integer(534); _sage_const_13 = Integer(13); _sage_const_12 = Integer(12); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_17 = Integer(17); _sage_const_16 = Integer(16); _sage_const_15 = Integer(15); _sage_const_14 = Integer(14); _sage_const_19 = Integer(19); _sage_const_18 = Integer(18); _sage_const_2025 = Integer(2025); _sage_const_1231 = Integer(1231); _sage_const_754 = Integer(754); _sage_const_458 = Integer(458); _sage_const_1863 = Integer(1863); _sage_const_452 = Integer(452); _sage_const_758 = Integer(758); _sage_const_325 = Integer(325); _sage_const_328 = Integer(328); _sage_const_1708 = Integer(1708); _sage_const_2107 = Integer(2107); _sage_const_1704 = Integer(1704); _sage_const_134 = Integer(134); _sage_const_1228 = Integer(1228); _sage_const_1993 = Integer(1993); _sage_const_882 = Integer(882); _sage_const_887 = Integer(887); _sage_const_1641 = Integer(1641); _sage_const_1717 = Integer(1717); _sage_const_77 = Integer(77); _sage_const_1904 = Integer(1904); _sage_const_129 = Integer(129); _sage_const_637 = Integer(637); _sage_const_2004 = Integer(2004); _sage_const_546 = Integer(546); _sage_const_1937 = Integer(1937); _sage_const_1763 = Integer(1763); _sage_const_267 = Integer(267); _sage_const_1932 = Integer(1932); _sage_const_31 = Integer(31); _sage_const_1671 = Integer(1671); _sage_const_790 = Integer(790); _sage_const_6 = Integer(6); _sage_const_390 = Integer(390); _sage_const_48 = Integer(48); _sage_const_4 = Integer(4); _sage_const_274 = Integer(274); _sage_const_1770 = Integer(1770); _sage_const_787 = Integer(787); _sage_const_1667 = Integer(1667); _sage_const_860 = Integer(860); _sage_const_864 = Integer(864); _sage_const_388 = Integer(388); _sage_const_145 = Integer(145); _sage_const_308 = Integer(308); _sage_const_148 = Integer(148); _sage_const_305 = Integer(305); _sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_206 = Integer(206); _sage_const_5 = Integer(5); _sage_const_204 = Integer(204); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_28 = Integer(28); _sage_const_29 = Integer(29); _sage_const_22 = Integer(22); _sage_const_23 = Integer(23); _sage_const_20 = Integer(20); _sage_const_21 = Integer(21); _sage_const_26 = Integer(26); _sage_const_27 = Integer(27); _sage_const_24 = Integer(24); _sage_const_25 = Integer(25); _sage_const_1693 = Integer(1693); _sage_const_605 = Integer(605); _sage_const_1909 = Integer(1909); _sage_const_687 = Integer(687); _sage_const_30 = Integer(30); _sage_const_33 = Integer(33); _sage_const_32 = Integer(32); _sage_const_34 = Integer(34); _sage_const_2097 = Integer(2097); _sage_const_1734 = Integer(1734); _sage_const_1966 = Integer(1966); _sage_const_1962 = Integer(1962); _sage_const_1888 = Integer(1888)## This file (main-moonmath.sagetex.sage) was *autogenerated* from main-moonmath.tex with sagetex.sty version 2019/01/09 v3.2.
import sagetex
_st_ = sagetex.SageTeXProcessor('main-moonmath', version='2019/01/09 v3.2', version_check=True)
try:
 _st_.current_tex_line = _sage_const_48 
 _st_.commandline(_sage_const_0 , r"""
sage: ZZ # A sage notation for the integer type
sage: NN # A sage notation for the counting number type
sage: ZZ(5) # Get an element from the Ring of integers
sage: ZZ(5) + ZZ(3)
sage: ZZ(5) * NN(3)
sage: ZZ.random_element(10**50)
sage: ZZ(27713).str(2) # Binary string representation
sage: NN(27713).str(2) # Binary string representation
sage: ZZ(27713).str(16) # Hexadecimal string representation
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_58 )
try:
 _st_.current_tex_line = _sage_const_77 
 _st_.commandline(_sage_const_1 , r"""
sage: n = ZZ(19214758032624000)
sage: factor(n)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_80 )
try:
 _st_.current_tex_line = _sage_const_129 
 _st_.commandline(_sage_const_2 , r"""
sage: ZZ(-17) // ZZ(4) # Integer quotient
sage: ZZ(-17) % ZZ(4) # remainder
sage: ZZ(4).divides(ZZ(-17)) # self divides other
sage: ZZ(4).divides(ZZ(12))
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_134 )
try:
 _st_.current_tex_line = _sage_const_145 
 _st_.commandline(_sage_const_3 , r"""
sage: ZZ(143785).quo_rem(ZZ(17)) # Euclidean Division
sage: ZZ(143785) == ZZ(8457)*ZZ(17) + ZZ(16) # check
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_148 )
try:
 _st_.current_tex_line = _sage_const_204 
 _st_.commandline(_sage_const_4 , r"""
sage: ZZ(12).xgcd(ZZ(5)) # (gcd(a,b),s,t)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_206 )
try:
 _st_.current_tex_line = _sage_const_267 
 _st_.commandline(_sage_const_5 , r"""
sage: ZZ(137).gcd(ZZ(64))
sage: ZZ(64)** ZZ(137) % ZZ(137) == ZZ(64) % ZZ(137)
sage: ZZ(64)** ZZ(137-1) % ZZ(137) == ZZ(1) % ZZ(137)
sage: ZZ(1918).gcd(ZZ(137))
sage: ZZ(1918)** ZZ(137) % ZZ(137) == ZZ(1918) % ZZ(137)
sage: ZZ(1918)** ZZ(137-1) % ZZ(137) == ZZ(1) % ZZ(137)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_274 )
try:
 _st_.current_tex_line = _sage_const_305 
 _st_.commandline(_sage_const_6 , r"""
sage: (ZZ(7)* (ZZ(2)*ZZ(14) + ZZ(21)) + ZZ(11))  % ZZ(17) == (ZZ(14) - ZZ(102))  % ZZ(17)
sage: (ZZ(7)* (ZZ(2)*ZZ(218) + ZZ(21)) + ZZ(11))  % ZZ(17) == (ZZ(218) - ZZ(102))  % ZZ(17)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_308 )
try:
 _st_.current_tex_line = _sage_const_325 
 _st_.commandline(_sage_const_7 , r"""
sage: (ZZ(7)* ZZ(9))  % ZZ(17) == (-ZZ(260))  % ZZ(17)
sage: (ZZ(7)* ZZ(1726))  % ZZ(17) == (-ZZ(260))  % ZZ(17)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_328 )
try:
 _st_.current_tex_line = _sage_const_388 
 _st_.commandline(_sage_const_8 , r"""
sage: CRT_list([4,1,3,0], [7,3,5,11])
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_390 )
try:
 _st_.current_tex_line = _sage_const_452 
 _st_.commandline(_sage_const_9 , r"""
sage: Z6=Integers(6) # Define integers modulo 6
sage: Z6(2)+Z6(5) # standard representatives of a class
sage: Z6(14)+Z6(-1) # different representatives for same class
sage: - Z6(2) # additive inverse
sage: Z6(5)**(-1) # multiplicative inverse if exists
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_458 )
try:
 _st_.current_tex_line = _sage_const_534 
 _st_.commandline(_sage_const_10 , r"""
sage: Zx = ZZ['x'] # integer polynomials with indeterminate x
sage: Zt.<t> = ZZ[] # integer polynomials with indeterminate t
sage: Zx
sage: Zt
sage: p = Zx([1,2,3,4])
sage: q = Zt([1,2,3,4])
sage: p
sage: q
sage: p.degree()
sage: zero = Zx([0])
sage: zero.degree()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_546 )
try:
 _st_.current_tex_line = _sage_const_605 
 _st_.commandline(_sage_const_11 , r"""
sage: Zx = ZZ['x']
sage: P = Zx([2,-4,5])
sage: Q = Zx([5,0,-2,1])
sage: P
sage: Q
sage: P+Q
sage: P*Q
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_613 )
try:
 _st_.current_tex_line = _sage_const_629 
 _st_.commandline(_sage_const_12 , r"""
sage: Z6 = Integers(6)['x']
sage: P = Z6([2,-4,5])
sage: Q = Z6([5,0,-2,1])
sage: P
sage: Q
sage: P+Q
sage: P*Q
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_637 )
try:
 _st_.current_tex_line = _sage_const_687 
 _st_.commandline(_sage_const_13 , r"""
sage: Zx = ZZ['x']
sage: a = Zx([-9,0,0,2,0,1])
sage: b = Zx([-1,4,1])
sage: m = Zx([-80,19,-4,1])
sage: r = Zx([-89,339])
sage: a == m*b +r
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_694 )
try:
 _st_.current_tex_line = _sage_const_754 
 _st_.commandline(_sage_const_14 , r"""
sage: Groups()
sage: CommutativeAdditiveGroups()
sage: FiniteGroups()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_758 )
try:
 _st_.current_tex_line = _sage_const_765 
 _st_.commandline(_sage_const_15 , r"""
sage: TrivialGroup = SymmetricGroup(1)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_767 )
try:
 _st_.current_tex_line = _sage_const_787 
 _st_.commandline(_sage_const_16 , r"""
sage: CommutativeRings()
sage: CommutativeRings().super_categories()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_790 )
try:
 _st_.current_tex_line = _sage_const_855 
 _st_.commandline(_sage_const_17 , r"""
sage: Fields()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_857 )
try:
 _st_.current_tex_line = _sage_const_860 
 _st_.commandline(_sage_const_18 , r"""
sage: QQ
sage: QQ(1/5) # Get an element from the field of rational numbers
sage: QQ(1/5) / QQ(3) # Division
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_864 )
try:
 _st_.current_tex_line = _sage_const_882 
 _st_.commandline(_sage_const_19 , r"""
sage: GF(2)
sage: GF(2)(1) # Get an element from GF(2)
sage: GF(2)(1) + GF(2)(1) # Addition
sage: GF(2)(1) / GF(2)(1) # Division
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_887 )
try:
 _st_.current_tex_line = _sage_const_1228 
 _st_.commandline(_sage_const_20 , r"""
sage: EllipticCurve(GF(5),[1,0])
sage: EllipticCurve(GF(5),[1,0]).trace_of_frobenius()
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1231 )
try:
 _st_.current_tex_line = _sage_const_1629 
 _st_.commandline(_sage_const_21 , r"""
sage: F43 = GF(43)
sage: F43t.<t> = F43[]
sage: F43_6.<v> = GF(43^6, name='v', modulus=t^6+6) # t^6+6 irreducible
sage: BLS6 = EllipticCurve (F43_6,[0 ,6])
sage: INF = BLS6(0) # point at infinity
sage: for P in INF.division_points(13): # PI(P) == [q]P
....:     if P.order() == 13: # exclude point at infinity
....:         PiP = BLS6([a.frobenius() for a in P])
....:         qP = 43*P
....:         if PiP == qP:
....:             print(P.xy())
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1641 )
try:
 _st_.current_tex_line = _sage_const_1667 
 _st_.commandline(_sage_const_22 , r"""
sage: g1 = BLS6([13,15])
sage: g2 = BLS6([7*v^2, 16*v^3])
sage: g1.weil_pairing(g2,13)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1671 )
try:
 _st_.current_tex_line = _sage_const_1693 
 _st_.commandline(_sage_const_23 , r"""
sage: F13 = GF(13)
sage: for A in xrange(3, 13):
....:     if (A-2) % 4 != 0:
....:         continue
....:     try:
....:         E = EllipticCurve(F13, [0, A, 0, 1, 0]) # Montgomery form
....:         E
....:         E.order()
....:     except:
....:         continue
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1704 )
try:
 _st_.current_tex_line = _sage_const_1708 
 _st_.commandline(_sage_const_24 , r"""
sage: for d in F13:
....:     j= ZZ(0)
....:     for x in F13:
....:         for y in F13:
....:             if x^2+y^2 == 1+d*x^2*y^2:
....:                 j=j+1
....:     print('d=',d)
....:     print('order=',j)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1717 )
try:
 _st_.current_tex_line = _sage_const_1729 
 _st_.commandline(_sage_const_25 , r"""
sage: for x in F13:
....:     for y in F13:
....:         if x^2+y^2 == F13(1)+F13(7)*x^2*y^2:
....:             print(x,y)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1734 )
try:
 _st_.current_tex_line = _sage_const_1763 
 _st_.commandline(_sage_const_26 , r"""
sage: def Edwards_add((x1,y1),(x2,y2),d):
....:     x3 = F13((F13(x1)*F13(y2)+F13(y1)*F13(x2))/((F13(1)+F13(d)*F13(x1)*F13
....: (x2)*F13(y1)*F13(y2))))
....:     y3 = F13((F13(y1)*F13(y2)-F13(x1)*F13(x2))/((F13(1)-F13(d)*F13(x1)*F13
....: (x2)*F13(y1)*F13(y2))))
....:     return (x3,y3)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1770 )
try:
 _st_.current_tex_line = _sage_const_1863 
 _st_.commandline(_sage_const_27 , r"""
sage: F13 = GF(13)
sage: for A in xrange(3, 13):
....:     if (A-2) % 4 != 0:
....:         continue
....:     try:
....:         E = EllipticCurve(F13, [0, A, 0, 1, 0]) # Montgomery form
....:         E
....:         E.order()
....:     except:
....:         continue
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1874 )
try:
 _st_.current_tex_line = _sage_const_1878 
 _st_.commandline(_sage_const_28 , r"""
sage: j = ZZ(0)
sage: for a in F13:
....:     for d in F13:
....:         j = 0
....:         for x in F13:
....:             for y in F13:
....:                 if a*x^2 + y^2 == 1+d*x^2*y^2:
....:                     j=j+1
....:         print('curve: a=',a,'d=',d,'order:',j)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1888 )
try:
 _st_.current_tex_line = _sage_const_1904 
 _st_.commandline(_sage_const_29 , r"""
sage: for x in F13:
....:     for y in F13:
....:         if F13(2)*x^2+y^2 == F13(1)+F13(11)*x^2*y^2:
....:             print(x,y)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1909 )
try:
 _st_.current_tex_line = _sage_const_1932 
 _st_.commandline(_sage_const_30 , r"""
sage: def Edwards_add((x1,y1),(x2,y2),a,d):
....:     x3 = F13((F13(x1)*F13(y2)+F13(y1)*F13(x2))/((F13(1)+F13(d)*F13(x1)*F13(x2)*F13(y1)*F13(y2))))
....:     y3 = F13((F13(y1)*F13(y2)-F13(a)*F13(x1)*F13(x2))/((F13(1)-F13(d)*F13(x1)*F13(x2)*F13(y1)*F13(y2))))
....:     return (x3,y3)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1937 )
try:
 _st_.current_tex_line = _sage_const_1962 
 _st_.commandline(_sage_const_31 , r"""
sage: F7 = GF(7)
sage: MNT4 = EllipticCurve (F7,[4 ,1])
sage: [P.xy() for P in MNT4.points() if P.order() > 1]
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_1966 )
try:
 _st_.current_tex_line = _sage_const_1993 
 _st_.commandline(_sage_const_32 , r"""
sage: F7t.<t> = F7[]
sage: F7_4.<u> = GF(7^4, name='u', modulus=t^4+t+1) # embedding degree is 4
sage: MNT4 = EllipticCurve (F7_4,[4 ,1])
sage: INF = MNT4(0) # point at infinity
sage: for P in INF.division_points(5): # PI(P) == [q]P
....:     if P.order() == 5: # exclude point at infinity
....:         PiP = MNT4([a.frobenius() for a in P])
....:         qP = 7*P
....:         if PiP == qP:
....:             print(P.xy())
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_2004 )
try:
 _st_.current_tex_line = _sage_const_2021 
 _st_.commandline(_sage_const_33 , r"""
sage: g1 = MNT4([0,1])
sage: g2 = MNT4(2*u^3 + 5*u^2 + 4*u + 2, 2*u^3 + 3*u + 5)
sage: g1.weil_pairing(g2,5)
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_2025 )
try:
 _st_.current_tex_line = _sage_const_2097 
 _st_.commandline(_sage_const_34 , r"""
sage: G.<x> = GF(5^6) # embedding degree is 6
sage: MNT6 = EllipticCurve (G,[2 ,1])
sage: INF = MNT6(0) # point at infinity
sage: for P in INF.division_points(7): # PI(P) == [q]P
....:     if P.order() == 7: # exclude point at infinity
....:         PiP = MNT6([a.frobenius() for a in P])
....:         qP = 5*P
....:         if PiP == qP:
....:             print(P.xy())
""", globals(), locals(), True)
except:
 _st_.goboom(_sage_const_2107 )
_st_.endofdoc()

